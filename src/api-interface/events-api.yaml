paths:
  /events:
    get:
      description: Get all events
      tags:
        - Event Management
      operationId: fetchEvents
      parameters:
        - in: query
          name: status
          schema:
            type: string
          description: Status of the events to be fetched
      responses:
        "200":
          description: successfully fetched events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
        "404":
          description: unable to find events as per query params
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      description: Create an event
      tags:
        - Event Management
      operationId: createEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        "200":
          description: Event created successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - eventId
                  - status
                properties:
                  eventId:
                    type: string
                  status:
                    type: string
        "201":
          description: Event created successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - eventId
                  - status
                properties:
                  eventId:
                    type: string
                  status:
                    type: string
        "406":
          description: Event already exists and cannot be created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /events/{eventId}:
    parameters:
      - $ref: "#/components/parameters/eventId"
    get:
      description: Get details of the event
      tags:
        - Event Management
      operationId: getEvent
      responses:
        "200":
          description: successfully fetched event details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      description: Update details of the event
      tags:
        - Event Management
      operationId: updateEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        "202":
          description: successfully updated event details
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      description: delete the selected event
      tags:
        - Event Management
      operationId: removeEvent
      responses:
        "200":
          description: successfully fetched event details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /events/{eventId}/artisan:
    post:
      description: Add artisan to event
      tags:
        - Event Management
      operationId: addArtisan
      parameters:
        - $ref: "#/components/parameters/eventId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Artisan"
      responses:
        "200":
          description: Event Updated successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - eventId
                  - status
                properties:
                  eventId:
                    type: string
                  status:
                    type: string
        "201":
          description: Event Updated successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - eventId
                  - status
                properties:
                  eventId:
                    type: string
                  status:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /events/{eventId}/artisan/{artisanId}:
    delete:
      description: remove artisan from event
      tags:
        - Event Management
      operationId: removeArtisanEvent
      parameters:
        - $ref: "#/components/parameters/eventId"
        - $ref: "#/components/parameters/artisanId"
      responses:
        "200":
          description: Event Updated successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - eventId
                  - status
                properties:
                  eventId:
                    type: string
                  status:
                    type: string
        "201":
          description: Event Updated successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - eventId
                  - status
                properties:
                  eventId:
                    type: string
                  status:
                    type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  parameters:
    eventId:
      in: path
      name: eventId
      required: true
      schema:
        type: string
      description: Event Id of the event to be updated
    artisanId:
      in: path
      name: artisanId
      required: true
      schema:
        type: string
      description: artisan Id of the event to be removed
  schemas:
    Event:
      type: object
      required:
        - name
        - startsOn
        - endsOn
        - location
        - pointOfContact
      properties:
        name:
          type: string
        startsOn:
          type: string
        endsOn:
          type: string
        location:
          type: string
        pointOfContact:
          type: string
        adUrl:
          type: string
        comments:
          type: string
        artisans:
          type: array
          items:
            type: object
            required:
              - id
              - name
            properties:
              id:
                type: string
              name:
                type: string
