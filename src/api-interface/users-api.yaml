paths:
  /user:
    get:
      description: Fetch all the users
      tags:
        - User Management
      operationId: fetchAllUsers
      x-middleware:
        - roleMiddleware
      x-role: 
        - dastkar-user-readAll
        - dastkar-app-admin
      responses:
        "200":
          description: successfull retrieval
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserDetails"
    post:
      description: Create user of the application
      tags:
        - User Management
      operationId: createUser
      x-middleware:
        - roleMiddleware
      x-role: 
        - dastkar-user-create
        - dastkar-app-admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDetails"
      responses:
        "201":
          description: User creation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"

  /user/{username}:
    parameters:
      - $ref: "#/components/parameters/username"
    get:
      description: Fetch all the users
      tags:
        - User Management
      operationId: fetchUser
      x-middleware:
        - roleMiddleware
      x-role: 
        - dastkar-user-read
        - dastkar-app-admin
      responses:
        "200":
          description: successfull retrieval
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetails"
    post:
      description: update user of the application
      tags:
        - User Management
      operationId: updateUser
      x-middleware:
        - roleMiddleware
      x-role: 
        - dastkar-user-update
        - dastkar-app-admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDetails"
      responses:
        "201":
          description: User creation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
    delete:
      description: delete user
      tags:
        - User Management
      operationId: removeUser
      x-middleware:
        - roleMiddleware
      x-role: 
        - dastkar-user-delete
        - dastkar-app-admin
      responses:
        "200":
          description: successfull removal
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
components:
  parameters:
    username:
      in: path
      name: username
      required: true
      schema:
        type: string
      description: username of the user
  schemas:
    UserDetails:
      type: object
      required:
        - identifier
      properties:
        identifier:
          type: object
          properties:
            username:
              type: string
              example: "johndoe123"
            firstName:
              type: string
              example: "john"
            lastName:
              type: string
              example: "doe"
            email:
              type: string
              example: "johndoe@email.com"
            mobileNumber:
              type: string
              example: "+61123123123"
        password:
          type: string
          example: "johndoe1234"
        oldPassword:
          type: string
          example: "johndoe1234"
        role:
          type: array
          items:
            type: string
          example:
            - dastkar-app-creator
            - dastkar-admin-user
